A_program 
	|--A_programElement 
		|--A_varDeclStmt let 
			|--A_varDecl 
				|--A_varDeclArray a[10]:
				|--A_type int;

	|--A_programElement 
		|--A_varDeclStmt let 
			|--A_varDef 
				|--A_varDefScalar b:
				|--A_type int = 
				|--A_rightVal 
					|--A_arithExpr 
						|--A_arithBiOpExpr 
							|--A_arithExpr 
								|--A_arithBiOpExpr 
									|--A_arithExpr 
										|--A_exprUnit 3+
									|--A_arithExpr 
										|--A_exprUnit 4+
							|--A_arithExpr 
								|--A_arithBiOpExpr 
									|--A_arithExpr 
										|--A_arithBiOpExpr 
											|--A_arithExpr 
												|--A_exprUnit 5*
											|--A_arithExpr 
												|--A_exprUnit 8/
									|--A_arithExpr 
										|--A_exprUnit 2;

	|--A_programElement 
		|--A_varDeclStmt let 
			|--A_varDef 
				|--A_varDefScalar c:
				|--A_type int = 
				|--A_rightVal 
					|--A_boolExpr 
						|--A_boolBiOpExpr 
							|--A_boolExpr 
								|--A_boolUnit (
									|--A_boolExpr 
										|--A_boolUnit (
											|--A_comExpr 
												|--A_exprUnit 1<
												|--A_exprUnit 2))&&
							|--A_boolExpr 
								|--A_boolUnit (
									|--A_boolExpr 
										|--A_boolUnit (
											|--A_comExpr 
												|--A_exprUnit (
													|--A_arithExpr 
														|--A_arithBiOpExpr 
															|--A_arithExpr 
																|--A_exprUnit 5*
															|--A_arithExpr 
																|--A_exprUnit 3)<
												|--A_exprUnit (
													|--A_arithExpr 
														|--A_arithBiOpExpr 
															|--A_arithExpr 
																|--A_exprUnit 4*
															|--A_arithExpr 
																|--A_exprUnit 4)));

	|--A_programElement 
		|--A_fnDef 
			|--A_fnDecl fn main(
				|--A_paramDecl )->
			|--A_type int{

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall _sysy_starttime(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 4);

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDef 
						|--A_varDefScalar i:
						|--A_type int = 
						|--A_rightVal 
							|--A_arithExpr 
								|--A_exprUnit 0;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDef 
						|--A_varDefScalar sum:
						|--A_type int = 
						|--A_rightVal 
							|--A_arithExpr 
								|--A_exprUnit 0;

			|--A_codeBlockStmt 
				|--A_whileStmt while(
					|--A_boolExpr 
						|--A_boolUnit (
							|--A_comExpr 
								|--A_exprUnit i<
								|--A_exprUnit 10)){

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal 
								|--A_arrayExpr 
								|--A_leftVal a[
									|--A_indexExpr i] = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit i;

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal i = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit i+
										|--A_arithExpr 
											|--A_exprUnit 1;
}

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal i = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 0;

			|--A_codeBlockStmt 
				|--A_whileStmt while(
					|--A_boolExpr 
						|--A_boolUnit (
							|--A_comExpr 
								|--A_exprUnit i<
								|--A_exprUnit 10)){

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal sum = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit sum+
										|--A_arithExpr 
											|--A_exprUnit 
												|--A_arrayExpr 
												|--A_leftVal a[
													|--A_indexExpr i];

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal i = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit i+
										|--A_arithExpr 
											|--A_exprUnit 1;
}

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall putint(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit b);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall putint(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit c);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall putint(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit sum);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall _sysy_stoptime(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 19);

			|--A_codeBlockStmt 
				|--A_returnStmt ret 
				|--A_rightVal 
					|--A_arithExpr 
						|--A_exprUnit 0;
}
