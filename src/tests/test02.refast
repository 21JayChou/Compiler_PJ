A_program 
	|--A_programElement 
		|--A_structDef struct Node {

			|--A_varDecl 
				|--A_varDeclScalar l:
				|--A_type int,

			|--A_varDecl 
				|--A_varDeclScalar r:
				|--A_type int
}

	|--A_programElement 
		|--A_fnDef 
			|--A_fnDecl fn foo(
				|--A_paramDecl 
					|--A_varDecl 
						|--A_varDeclScalar c:
						|--A_type Node){

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal 
						|--A_memberExpr 
						|--A_leftVal c.l = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 
								|--A_fnCall getint();

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal 
						|--A_memberExpr 
						|--A_leftVal c.r = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 
								|--A_fnCall getint();

			|--A_codeBlockStmt 
				|--A_returnStmt ret ;
}

	|--A_programElement 
		|--A_fnDef 
			|--A_fnDecl fn baz(
				|--A_paramDecl 
					|--A_varDecl 
						|--A_varDeclArray c[10]:
						|--A_type Node){

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal 
						|--A_memberExpr 
						|--A_leftVal 
							|--A_arrayExpr 
							|--A_leftVal c[
								|--A_indexExpr 2].l = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 
								|--A_fnCall getint();

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal 
						|--A_memberExpr 
						|--A_leftVal 
							|--A_arrayExpr 
							|--A_leftVal c[
								|--A_indexExpr 2].r = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 
								|--A_fnCall getint();

			|--A_codeBlockStmt 
				|--A_returnStmt ret ;
}

	|--A_programElement 
		|--A_varDeclStmt let 
			|--A_varDecl 
				|--A_varDeclScalar d:
				|--A_type Node;

	|--A_programElement 
		|--A_varDeclStmt let 
			|--A_varDecl 
				|--A_varDeclArray e[10]:
				|--A_type Node;

	|--A_programElement 
		|--A_fnDef 
			|--A_fnDecl fn main(
				|--A_paramDecl )->
			|--A_type int{

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall _sysy_starttime(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 13);

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar c:
						|--A_type Node;

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal 
						|--A_memberExpr 
						|--A_leftVal c.l = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 1;

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal 
						|--A_memberExpr 
						|--A_leftVal c.r = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 2;

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall foo(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit c);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall foo(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit d);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall baz(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit e);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall putint(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_arithBiOpExpr 
								|--A_arithExpr 
									|--A_exprUnit 
										|--A_memberExpr 
										|--A_leftVal c.l+
								|--A_arithExpr 
									|--A_exprUnit 
										|--A_memberExpr 
										|--A_leftVal c.r);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall putint(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_arithBiOpExpr 
								|--A_arithExpr 
									|--A_exprUnit 
										|--A_memberExpr 
										|--A_leftVal d.l+
								|--A_arithExpr 
									|--A_exprUnit 
										|--A_memberExpr 
										|--A_leftVal d.r);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall putint(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_arithBiOpExpr 
								|--A_arithExpr 
									|--A_exprUnit 
										|--A_memberExpr 
										|--A_leftVal 
											|--A_arrayExpr 
											|--A_leftVal e[
												|--A_indexExpr 2].l+
								|--A_arithExpr 
									|--A_exprUnit 
										|--A_memberExpr 
										|--A_leftVal 
											|--A_arrayExpr 
											|--A_leftVal e[
												|--A_indexExpr 2].r);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall _sysy_stoptime(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 19);

			|--A_codeBlockStmt 
				|--A_returnStmt ret 
				|--A_rightVal 
					|--A_arithExpr 
						|--A_exprUnit 0;
}
